{"version":3,"file":"static/js/24.7a6a73b8.chunk.js","mappings":"2LACA,EAAwD,wB,SCIzC,SAASA,EAAT,GAA6B,IAATC,EAAQ,EAARA,MAGzBC,GAAWC,EAAAA,EAAAA,MAGXC,EAAWH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACvB,SAAC,KAAD,CAAeC,GAAE,kBAAaD,GAAME,MAAO,CAACC,KAAMR,GAAWS,UAAWC,EAAxE,SAAmFN,GAAxEC,EADY,IAG3B,OACI,+BACI,wBACKH,KAIhB,C,8IChBc,SAASS,EAAT,GAA8C,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,YAC5C,GAA4BC,EAAAA,EAAAA,UAAQ,OAACD,QAAD,IAACA,EAAAA,EAAe,IAApD,eAAOE,EAAP,KAAeC,EAAf,KASMC,EAAe,SAACC,GACpBA,EAAEC,iBACFP,EAAUG,EAET,EACH,OACE,kBAAMH,SAAUK,EAAhB,WACE,kBACEG,SAbe,SAACF,GACpB,IAAQG,EAAUH,EAAEI,OAAZD,MACRL,EAAUK,EACX,EAWKA,MAAON,EACPQ,KAAK,OACLC,KAAK,YAEL,mBAAQD,KAAK,SAASE,QAASR,EAA/B,sBAGP,C,sBCrBc,SAASS,IAGtB,OAA0BZ,EAAAA,EAAAA,UAAS,IAAnC,eAAOf,EAAP,KAAc4B,EAAd,KACA,GAA8Bb,EAAAA,EAAAA,WAAS,GAAvC,eAAOc,EAAP,KAAgBC,EAAhB,KACA,GAA0Bf,EAAAA,EAAAA,UAAS,MAAnC,eAAOgB,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMrB,EAAcoB,EAAaE,IAAI,gBAGrCC,EAAAA,EAAAA,YAAU,WACR,GAAKvB,GAAqC,IAAtBA,EAAYwB,OAAhC,CACA,IAAMC,EAAU,mCAAG,oGAEfT,GAAW,GAFI,UAGIU,EAAAA,EAAAA,IAAY1B,GAHhB,OAGT2B,EAHS,OAIfb,EAASa,EAAKC,SAJC,gDAOfV,EAAS,EAAD,IAPO,yBASfF,GAAW,GATI,4EAAH,qDAYhBS,GAbyD,CAcxD,GAAE,CAACzB,IAQN,OACE,4BACE,SAACF,EAAD,CAAYC,SARC,SAACG,GAChBmB,EAAgB,CAACrB,YAAaE,GAC/B,EAMmCF,YAAaA,IAC5Ce,IAAW,SAACc,EAAA,EAAD,IACXZ,IAAS,uJACR/B,EAAMsC,QAAUxB,IAAe,2HAChCd,EAAMsC,OAAQ,IAAM,SAACvC,EAAA,EAAD,CAAWC,MAAOA,MAG5C,C","sources":["webpack://react-homework-template/./src/components/FilmItems/FilmItems.module.css?475c","components/FilmItems/FilmItems.jsx","components/MoviesForm/MoviesForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"FilmItems_title__xOIvm\",\"link\":\"FilmItems_link__ndXNI\"};","import { Link, useLocation } from \"react-router-dom\"\nimport css from \"components/FilmItems/FilmItems.module.css\"\nimport PropTypes from \"prop-types\"\n\n\nexport default function FilmItems({items}) {\n    // console.log(items)\n\n    const location = useLocation()\n//   console.log(\"location\", location)\n\n    const elements = items.map(({ title, id }) => \n        <Link key={id} to={`/movies/${id}`} state={{from: location}} className={css.link}>{title}</Link>        \n    )\n    return (\n        <>\n            <ul>\n                {elements}\n            </ul>\n        </>\n    )\n}\n\nFilmItems.propTypes = {\n    items: PropTypes.array.isRequired\n}\n\n","import React from 'react'\nimport { useState } from 'react'\nimport PropTypes from \"prop-types\"\n\n\nexport default function MoviesForm({onSubmit, searchQuery}) {\n  const [search, setSearch] = useState(searchQuery ?? \"\")\n\n\n  \n  const handleChange = (e) => {\n    const { value } = e.target\n    setSearch(value)\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    onSubmit( search )\n\n    }\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        onChange={handleChange}\n        value={search}\n        type=\"text\"\n        name='search'\n      />\n        <button type='submit' onClick={handleSubmit}>Search</button>\n    </form>\n  )\n}\nMoviesForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string\n}\n","import FilmItems from 'components/FilmItems/FilmItems'\nimport Loading from 'components/Loading/Loading'\nimport MoviesForm from 'components/MoviesForm/MoviesForm'\n// import MoviesGallery from 'components/MoviesGallery/MoviesGallery'\nimport React from 'react'\nimport { useState, useEffect } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport { searchPosts } from 'shared/API/post'\n\n\nexport default function Movies() {\n\n  // const [search, setSearch] = useState(\"\")\n  const [items, setItems] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  const [searchParams, setSearchParams] = useSearchParams()\n \n  const searchQuery = searchParams.get(\"searchQuery\")\n\n\n  useEffect(() => {\n    if (!searchQuery || searchQuery.length ===0  ) { return }\n    const fetchPosts = async () => {\n      try {\n        setLoading(true)\n        const data = await searchPosts(searchQuery)\n        setItems(data.results)\n        // console.log(data.results)\n      } catch (error) {\n        setError(error)\n      } finally {\n        setLoading(false)\n        }\n    }\n    fetchPosts()\n    }, [searchQuery])\n\n  const onSearch = (search) => {\n    setSearchParams({searchQuery: search})\n  }\n\n\n\n  return (\n    <div>\n      <MoviesForm onSubmit={onSearch} searchQuery={searchQuery} />\n      {loading && <Loading />}\n      {error && <p>Что-то пошло не по плану...</p>}\n      {!items.length && searchQuery && <p>Ничего не найдено...</p>}\n      {items.length> 0  && <FilmItems items={items} />}\n    </div>\n  )\n}\n"],"names":["FilmItems","items","location","useLocation","elements","map","title","id","to","state","from","className","css","MoviesForm","onSubmit","searchQuery","useState","search","setSearch","handleSubmit","e","preventDefault","onChange","value","target","type","name","onClick","Movies","setItems","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","length","fetchPosts","searchPosts","data","results","Loading"],"sourceRoot":""}